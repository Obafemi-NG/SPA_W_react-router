{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/RootLayout\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport { loader as fetchEvents } from \"./pages/Events\";\nimport Error from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this),\n        loader: fetchEvents\n      }, {\n        path: \":id\",\n        element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \":id/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Home","Events","EventDetail","NewEvent","EditEvent","RootLayout","EventRootLayout","loader","fetchEvents","Error","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/RootLayout\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport { loader as fetchEvents } from \"./pages/Events\";\nimport Error from \"./pages/Error\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      errorElement: <Error />,\n      children: [\n        { index: true, element: <Home /> },\n        {\n          path: \"events\",\n          element: <EventRootLayout />,\n          children: [\n            { index: true, element: <Events />, loader: fetchEvents },\n            { path: \":id\", element: <EventDetail /> },\n            { path: \"new\", element: <NewEvent /> },\n            { path: \":id/edit\", element: <EditEvent /> },\n          ],\n        },\n      ],\n    },\n  ]);\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,SAASC,MAAM,IAAIC,WAAW,QAAQ,gBAAgB;AACtD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;IACEe,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACN,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IACvBC,YAAY,eAAET,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IACvBE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACX,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC,EAClC;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACL,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MAC5BE,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEJ,OAAA,CAACV,MAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAAEZ,MAAM,EAAEC;MAAY,CAAC,EACzD;QAAEM,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACT,WAAW;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,CAAC,EACzC;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACR,QAAQ;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,CAAC,EACtC;QAAEL,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACP,SAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI,CAAC;IAEhD,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBAAOR,OAAA,CAACb,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAkB;AAC1D;AAACI,EAAA,GAtBQX,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}