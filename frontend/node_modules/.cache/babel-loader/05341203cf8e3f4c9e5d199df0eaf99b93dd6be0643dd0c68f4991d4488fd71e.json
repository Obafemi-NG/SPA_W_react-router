{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return (\n    /*#__PURE__*/\n    // <React.Fragment>\n    //   <div style={{ textAlign: \"center\" }}>\n    //     <EventsList events={data} />\n    //   </div>\n    // </React.Fragment>\n    _jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Events, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport default Events;\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"unable to fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const {\n      loadedData\n    } = await response.json();\n    return loadedData.events;\n  }\n};\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","Suspense","EventsList","Await","defer","json","useLoaderData","jsxDEV","_jsxDEV","Events","_s","events","fallback","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loadedData","loader","$RefreshReg$"],"sources":["/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { Await, defer, json, useLoaderData } from \"react-router-dom\";\n\nconst Events = () => {\n  const { events } = useLoaderData();\n  return (\n    // <React.Fragment>\n    //   <div style={{ textAlign: \"center\" }}>\n    //     <EventsList events={data} />\n    //   </div>\n    // </React.Fragment>\n    <Suspense fallback={<p> Loading... </p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n};\n\nexport default Events;\n\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json(\n      { message: \"unable to fetch events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const { loadedData } = await response.json();\n    return loadedData.events;\n  }\n};\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents(),\n  });\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGL,aAAa,EAAE;EAClC;IAAA;IACE;IACA;IACA;IACA;IACA;IACAE,OAAA,CAACP,QAAQ;MAACW,QAAQ,eAAEJ,OAAA;QAAAK,QAAA,EAAG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;MAAAJ,QAAA,eACtCL,OAAA,CAACL,KAAK;QAACe,OAAO,EAAEP,MAAO;QAAAE,QAAA,EACnBM,YAAY,iBAAKX,OAAA,CAACN,UAAU;UAACS,MAAM,EAAEQ;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;AAEf,CAAC;AAACP,EAAA,CAdID,MAAM;EAAA,QACSH,aAAa;AAAA;AAAAc,EAAA,GAD5BX,MAAM;AAgBZ,eAAeA,MAAM;AAErB,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAM;MAAEC;IAAW,CAAC,GAAG,MAAML,QAAQ,CAACjB,IAAI,EAAE;IAC5C,OAAOsB,UAAU,CAAChB,MAAM;EAC1B;AACF,CAAC;AAED,OAAO,MAAMiB,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAOxB,KAAK,CAAC;IACXO,MAAM,EAAEU,UAAU;EACpB,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}