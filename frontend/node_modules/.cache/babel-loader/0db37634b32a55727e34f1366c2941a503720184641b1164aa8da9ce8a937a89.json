{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const event = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetail, \"f+CY/h38cRQOxw9KpH9VFCtzaWo=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.id;\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw json({\n      message: `{unable to fetch event with the id ${id}}`\n    }, {\n      status: 500\n    });\n  }\n  return response;\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","event","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetail = () => {\n  const event = useLoaderData();\n  return (\n    <React.Fragment>\n      <EventItem event={event} />\n    </React.Fragment>\n  );\n};\n\nexport default EventDetail;\n\nexport const loader = async ({ request, params }) => {\n  const id = params.id;\n  const response = await fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: `{unable to fetch event with the id ${id}}` },\n      { status: 500 }\n    );\n  }\n  return response;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,KAAK,GAAGN,aAAa,EAAE;EAC7B,oBACEG,OAAA,CAACL,KAAK,CAACS,QAAQ;IAAAC,QAAA,eACbL,OAAA,CAACF,SAAS;MAACK,KAAK,EAAEA;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACZ;AAErB,CAAC;AAACP,EAAA,CAPID,WAAW;EAAA,QACDJ,aAAa;AAAA;AAAAa,EAAA,GADvBT,WAAW;AASjB,eAAeA,WAAW;AAE1B,OAAO,MAAMU,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGF,EAAE,CAAC;EACjE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMtB,IAAI,CACR;MAAEuB,OAAO,EAAG,sCAAqCJ,EAAG;IAAG,CAAC,EACxD;MAAEK,MAAM,EAAE;IAAI,CAAC,CAChB;EACH;EACA,OAAOJ,QAAQ;AACjB,CAAC;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}