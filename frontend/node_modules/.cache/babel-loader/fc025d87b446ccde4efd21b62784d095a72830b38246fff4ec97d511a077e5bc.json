{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/NewEvent.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEvent = () => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {\n      method: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEvent;\nexport default NewEvent;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const enterValue = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(enterValue)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  return redirect(\"/events\");\n};\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["React","EventForm","redirect","jsxDEV","_jsxDEV","NewEvent","Fragment","children","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","enterValue","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","$RefreshReg$"],"sources":["/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { redirect } from \"react-router-dom\";\n\nconst NewEvent = () => {\n  return (\n    <React.Fragment>\n      <EventForm method=\"post\" />\n    </React.Fragment>\n  );\n};\n\nexport default NewEvent;\n\nexport const action = async ({ request, params }) => {\n  const data = await request.formData();\n  const enterValue = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(enterValue),\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  return redirect(\"/events\");\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA,CAACJ,KAAK,CAACM,QAAQ;IAAAC,QAAA,eACbH,OAAA,CAACH,SAAS;MAACO,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACZ;AAErB,CAAC;AAACC,EAAA,GANIR,QAAQ;AAQd,eAAeA,QAAQ;AAEvB,OAAO,MAAMS,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DnB,MAAM,EAAE,MAAM;IACdoB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,UAAU;EACjC,CAAC,CAAC;EACF,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAON,QAAQ;EACjB;EACA,OAAOxB,QAAQ,CAAC,SAAS,CAAC;AAC5B,CAAC;AAAC,IAAAW,EAAA;AAAAoB,YAAA,CAAApB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}