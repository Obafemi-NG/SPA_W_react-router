{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  // const [error, setError] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [eventData, setEventData] = useState();\n  useEffect(() => {\n    // setIsLoading(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(EventsList, {\n        events: eventData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Events, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Events;\nexport default Events;\nexport const loader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Error(\"Error fetch event data\");\n  }\n  const fetchedEvent = await response.json();\n  response.catch(error => {\n    console.log(error);\n  });\n  return fetchedEvent;\n  // setEventData(fetchedEvent.events);\n};\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useEffect","useState","EventsList","jsxDEV","_jsxDEV","Events","_s","Fragment","children","style","textAlign","events","eventData","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Error","fetchedEvent","json","catch","error","console","log","$RefreshReg$"],"sources":["/Users/admin/Downloads/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\n\nconst Events = () => {\n  // const [error, setError] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [eventData, setEventData] = useState();\n  useEffect(() => {\n    // setIsLoading(true);\n  }, []);\n  return (\n    <React.Fragment>\n      <div style={{ textAlign: \"center\" }}>\n        {/* {isLoading && <p> ...Loading </p>}\n        {error && <p> {error} </p>}\n        {!isLoading && eventData && <EventsList events={eventData} />} */}\n        <EventsList events={eventData} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Events;\n\nexport const loader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Error(\"Error fetch event data\");\n  }\n  const fetchedEvent = await response.json();\n  response.catch((error) => {\n    console.log(error);\n  });\n  return fetchedEvent;\n  // setEventData(fetchedEvent.events);\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA;EACA;EACAN,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EACN,oBACEI,OAAA,CAACL,KAAK,CAACQ,QAAQ;IAAAC,QAAA,eACbJ,OAAA;MAAKK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,eAIlCJ,OAAA,CAACF,UAAU;QAACS,MAAM,EAAEC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAErB,CAAC;AAACV,EAAA,CAjBID,MAAM;AAAAY,EAAA,GAANZ,MAAM;AAmBZ,eAAeA,MAAM;AAErB,OAAO,MAAMa,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;EAC1CL,QAAQ,CAACM,KAAK,CAAEC,KAAK,IAAK;IACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB,CAAC,CAAC;EACF,OAAOH,YAAY;EACnB;AACF,CAAC;AAAC,IAAAN,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}